1.
Получить информацию по игре
in:{color:3} - ваш цвет, or {} - нет цвета
out:
{Количество играков в этой игре
Подключившиеся игроки: {Цвет, Имя} - co меной
Открытые карты
Вашы карты (если был in)
Ваш цвет (это и есть идентификатор игрока) (если был in)
{players: 3, connected: [{color: 1, name: "Вася"},{color: 3, name: "Вика"}], 
 opencards: [1, 3], youcards: [3,4,7], youcolor: 3}
or
{} - нет игры
Если есть checks с good = true удаляем game_<id> = color (кэш), и перебрасываем на создание\подключение игры

db:
player
{(game_id), (color), name, players, playercards, opencards, hids}

shows
{id, game_id, from, to, card, showed} - генерируем только для to

checks
{id, game_id, from, to, cards, showed, good} - генерируем для каждого игрока 


2.
Подключится\Создать (если игры нет она создается)
in:
Количество играков(можно не задавать, если на 1. получили что-то) - игнорируется если игра уже создана
Имя
Цвет 
{players: 3, name: "Mih", color: "3"}
out:
{...} - информацию из 1. если все хорошо и в cookies(кэш) прописывается game_<id> = color c хранением в 1 день
, или подключится больше нельзя "players = connected.count"
or
{colors: [1,3,5]} -- цвет занят
or
{name: "Петя"} -- Имя занято уже

3.
Показать карту
game_<id> = color (кэш)
in:{}
Карта
Цвет игрока, для кого показываем карту
{card: 3, to: 4}
out:
{}
or
{error: "текст"}

3а.
Получение показанной карты (webservice)
game_<id> = color (кэш)
in:{}
out:
Карта
Цвет игрока, который показал
{card: 3, from: 3}
or
{error: "текст"}

4.
Обвинение
game_<id> = color (кэш)
in:{}
три карты
{cards: [1,2,3]}
out: 
три карты
верно\неверно
{cards: [1,2,3], good: true}
or
{error: "текст"}

4a.
Получение обвинения(webservice)
in:{}
три карты
верно\неверно
от кого
{from: 3, cards: [1,2,3], good: true}
or
{error: "текст"}

5. (может быть не удобно угадывать)
Удалить игру
in:{}
добавляем запись с верным обвинением - good = true


